<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TeachingDBDataSet" targetNamespace="http://tempuri.org/TeachingDBDataSet.xsd" xmlns:mstns="http://tempuri.org/TeachingDBDataSet.xsd" xmlns="http://tempuri.org/TeachingDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TeachingDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TeachingDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.dropbox14.Properties.Settings.GlobalReference.Default.TeachingDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="courseTableAdapter" GeneratorDataComponentClassName="courseTableAdapter" Name="course" UserDataComponentName="courseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TeachingDBConnectionString (Settings)" DbObjectName="TeachingDB.dbo.course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[course] WHERE (([courseId] = @Original_courseId) AND ([courseTitle] = @Original_courseTitle) AND ([instructorId] = @Original_instructorId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_courseTitle" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="courseTitle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[course] ([courseTitle], [instructorId]) VALUES (@courseTitle, @instructorId);
SELECT courseId, courseTitle, instructorId FROM course WHERE (courseId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@courseTitle" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="courseTitle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT courseId, courseTitle, instructorId FROM dbo.course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[course] SET [courseTitle] = @courseTitle, [instructorId] = @instructorId WHERE (([courseId] = @Original_courseId) AND ([courseTitle] = @Original_courseTitle) AND ([instructorId] = @Original_instructorId));
SELECT courseId, courseTitle, instructorId FROM course WHERE (courseId = @courseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@courseTitle" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="courseTitle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_courseTitle" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="courseTitle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="courseId" ColumnName="courseId" DataSourceName="TeachingDB.dbo.course" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@courseId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="courseId" DataSetColumn="courseId" />
              <Mapping SourceColumn="courseTitle" DataSetColumn="courseTitle" />
              <Mapping SourceColumn="instructorId" DataSetColumn="instructorId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="instructorTableAdapter" GeneratorDataComponentClassName="instructorTableAdapter" Name="instructor" UserDataComponentName="instructorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TeachingDBConnectionString (Settings)" DbObjectName="TeachingDB.dbo.instructor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[instructor] WHERE (([instructorId] = @Original_instructorId) AND ([instructorName] = @Original_instructorName) AND ([instructorOffice] = @Original_instructorOffice))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_instructorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_instructorOffice" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="instructorOffice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[instructor] ([instructorName], [instructorOffice]) VALUES (@instructorName, @instructorOffice);
SELECT instructorId, instructorName, instructorOffice FROM instructor WHERE (instructorId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@instructorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@instructorOffice" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="instructorOffice" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT instructorId, instructorName, instructorOffice FROM dbo.instructor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[instructor] SET [instructorName] = @instructorName, [instructorOffice] = @instructorOffice WHERE (([instructorId] = @Original_instructorId) AND ([instructorName] = @Original_instructorName) AND ([instructorOffice] = @Original_instructorOffice));
SELECT instructorId, instructorName, instructorOffice FROM instructor WHERE (instructorId = @instructorId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@instructorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@instructorOffice" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="instructorOffice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_instructorName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_instructorOffice" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="instructorOffice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="instructorId" ColumnName="instructorId" DataSourceName="TeachingDB.dbo.instructor" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@instructorId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="instructorId" DataSetColumn="instructorId" />
              <Mapping SourceColumn="instructorName" DataSetColumn="instructorName" />
              <Mapping SourceColumn="instructorOffice" DataSetColumn="instructorOffice" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TeachingDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TeachingDBDataSet" msprop:Generator_UserDSName="TeachingDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="course" msprop:Generator_TableClassName="courseDataTable" msprop:Generator_TableVarName="tablecourse" msprop:Generator_TablePropName="course" msprop:Generator_RowDeletingName="courseRowDeleting" msprop:Generator_RowChangingName="courseRowChanging" msprop:Generator_RowEvHandlerName="courseRowChangeEventHandler" msprop:Generator_RowDeletedName="courseRowDeleted" msprop:Generator_UserTableName="course" msprop:Generator_RowChangedName="courseRowChanged" msprop:Generator_RowEvArgName="courseRowChangeEvent" msprop:Generator_RowClassName="courseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="courseId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columncourseId" msprop:Generator_ColumnPropNameInRow="courseId" msprop:Generator_ColumnPropNameInTable="courseIdColumn" msprop:Generator_UserColumnName="courseId" type="xs:int" />
              <xs:element name="courseTitle" msprop:Generator_ColumnVarNameInTable="columncourseTitle" msprop:Generator_ColumnPropNameInRow="courseTitle" msprop:Generator_ColumnPropNameInTable="courseTitleColumn" msprop:Generator_UserColumnName="courseTitle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="instructorId" msprop:Generator_ColumnVarNameInTable="columninstructorId" msprop:Generator_ColumnPropNameInRow="instructorId" msprop:Generator_ColumnPropNameInTable="instructorIdColumn" msprop:Generator_UserColumnName="instructorId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="instructor" msprop:Generator_TableClassName="instructorDataTable" msprop:Generator_TableVarName="tableinstructor" msprop:Generator_TablePropName="instructor" msprop:Generator_RowDeletingName="instructorRowDeleting" msprop:Generator_RowChangingName="instructorRowChanging" msprop:Generator_RowEvHandlerName="instructorRowChangeEventHandler" msprop:Generator_RowDeletedName="instructorRowDeleted" msprop:Generator_UserTableName="instructor" msprop:Generator_RowChangedName="instructorRowChanged" msprop:Generator_RowEvArgName="instructorRowChangeEvent" msprop:Generator_RowClassName="instructorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="instructorId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columninstructorId" msprop:Generator_ColumnPropNameInRow="instructorId" msprop:Generator_ColumnPropNameInTable="instructorIdColumn" msprop:Generator_UserColumnName="instructorId" type="xs:int" />
              <xs:element name="instructorName" msprop:Generator_ColumnVarNameInTable="columninstructorName" msprop:Generator_ColumnPropNameInRow="instructorName" msprop:Generator_ColumnPropNameInTable="instructorNameColumn" msprop:Generator_UserColumnName="instructorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="instructorOffice" msprop:Generator_ColumnVarNameInTable="columninstructorOffice" msprop:Generator_ColumnPropNameInRow="instructorOffice" msprop:Generator_ColumnPropNameInTable="instructorOfficeColumn" msprop:Generator_UserColumnName="instructorOffice">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="7" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:course" />
      <xs:field xpath="mstns:courseId" />
    </xs:unique>
    <xs:unique name="instructor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:instructor" />
      <xs:field xpath="mstns:instructorId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_course_instructor" msdata:parent="instructor" msdata:child="course" msdata:parentkey="instructorId" msdata:childkey="instructorId" msprop:Generator_UserChildTable="course" msprop:Generator_ChildPropName="GetcourseRows" msprop:Generator_UserRelationName="fk_course_instructor" msprop:Generator_RelationVarName="relationfk_course_instructor" msprop:Generator_UserParentTable="instructor" msprop:Generator_ParentPropName="instructorRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>